{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _jsxFileName = \"/Users/jennifergerred/Documents/MIT/Week 28/restaurant/pages/menu.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    query {\\n      restaurants {\\n        id\\n        name\\n        description\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"../components/dishes\";\nimport { useContext, useState } from 'react';\nimport Link from \"next/link\";\nimport Cart from \"../components/cart\";\nimport AppContext from \"../components/context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Container, Row, Col } from \"reactstrap\";\n\nfunction Menu(props) {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(0),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      cart = _useContext.cart;\n\n  var _useState2 = useState(cart),\n      state = _useState2[0],\n      setState = _useState2[1];\n\n  var GET_RESTAURANTS = gql(_templateObject());\n\n  var _useQuery = useQuery(GET_RESTAURANTS),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, \"ERROR\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  console.log(\"Query Data: \".concat(data.restaurants));\n  var searchQuery = data.restaurants.filter(function (res) {\n    return res.name.toLowerCase().includes(props.search);\n  });\n  var restId = searchQuery[0].id; // definet renderer for Dishes\n\n  var renderDishes = function renderDishes(restaurantID) {\n    return __jsx(Dishes, {\n      restId: restaurantID,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 14\n      }\n    }, \" \");\n  };\n\n  if (searchQuery.length > 0) {\n    var restList = searchQuery.map(function (res) {\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        key: res.id,\n        style: {\n          marginTop: \"1rem\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 5\n        }\n      }, __jsx(Card, {\n        className: \"cards\",\n        style: {\n          margin: \"0 0.5rem 20px 0.5rem\",\n          minHeight: \"450px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\" + res.image.url,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 9\n        }\n      }), __jsx(CardBody, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }\n      }, __jsx(CardTitle, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '20px',\n          fontFamily: 'georgia'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }\n      }, res.name), __jsx(CardText, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }\n      }, res.description)), __jsx(\"div\", {\n        className: \"card-footer\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 9\n        }\n      }, __jsx(Button, {\n        color: \"info\",\n        onClick: function onClick() {\n          return setRestaurantID(res.id);\n        },\n        href: \"/menu\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }\n      }, \"View Specials\"))));\n    });\n    return __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 5\n      }\n    }, __jsx(Row, {\n      xs: \"3\",\n      style: {\n        marginTop: \"1rem\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }\n    }, renderDishes(restaurantID)), __jsx(Link, {\n      href: \"/menu\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }\n    }, \"Menu\"));\n  } else {\n    return __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 10\n      }\n    }, \" No Restaurants Found\");\n  }\n}\n\n_s(Menu, \"l1Ak/LzRian4lZrHyfOjQOP3flU=\", false, function () {\n  return [useQuery];\n});\n\n_c = Menu;\nexport default Menu;\n/*\nimport {gql,useQuery} from '@apollo/client';\nimport Dishes from \"../components/dishes\";\nimport {useContext, useState} from 'react';\nimport Link from \"next/link\";\nimport Cart from \"../components/cart\";\nimport AppContext from \"../components/context\";\nimport {Row, Col} from \"reactstrap\";\n\n\n\n  function Menu() {\n\n    \nreturn (\n    <>\n    <h1>This is where the specials will be</h1>\n    <Row>\n    <Col>Specials</Col>\n \n    <Col>\n<Cart></Cart>\n</Col>\n</Row>\n    </>\n)\n}\n  \n\n\n\n  export default Menu;\n  */\n\nvar _c;\n\n$RefreshReg$(_c, \"Menu\");","map":{"version":3,"sources":["/Users/jennifergerred/Documents/MIT/Week 28/restaurant/pages/menu.js"],"names":["gql","useQuery","Dishes","useContext","useState","Link","Cart","AppContext","Button","Card","CardBody","CardImg","CardText","CardTitle","Container","Row","Col","Menu","props","restaurantID","setRestaurantID","cart","state","setState","GET_RESTAURANTS","loading","error","data","console","log","restaurants","searchQuery","filter","res","name","toLowerCase","includes","search","restId","id","renderDishes","length","restList","map","marginTop","margin","minHeight","height","image","url","fontWeight","fontSize","fontFamily","description"],"mappings":"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","sourcesContent":["\nimport {gql,useQuery} from '@apollo/client';\nimport Dishes from \"../components/dishes\";\nimport {useContext, useState} from 'react';\nimport Link from \"next/link\"\n\n\nimport Cart from \"../components/cart\";\nimport AppContext from \"../components/context\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Container,\n  Row,\n  Col} from \"reactstrap\";\n\nfunction Menu(props){\n  const[restaurantID, setRestaurantID] = useState(0)\n  const {cart } = useContext(AppContext);\n  const [state, setState] = useState(cart)\n  const GET_RESTAURANTS = gql`\n    query {\n      restaurants {\n        id\n        name\n        description\n        image {\n          url\n        }\n      }\n    }\n  `;\n  const { loading, error, data } = useQuery(GET_RESTAURANTS)\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR</p>;\n  if (!data) return <p>Not found</p>;\n  console.log(`Query Data: ${data.restaurants}`)\n\n\nlet searchQuery = data.restaurants.filter((res) =>{\n    return res.name.toLowerCase().includes(props.search)\n  })\n\nlet restId = searchQuery[0].id\n \n// definet renderer for Dishes\n  const renderDishes = (restaurantID) => {\n    return ( <Dishes restId={restaurantID}> </Dishes>)\n  };\nif(searchQuery.length > 0){\n  const restList = searchQuery.map((res) => (\n    <Col xs=\"6\" sm=\"4\" key={res.id} style={{marginTop: \"1rem\"}}>\n      <Card className=\"cards\" style={{ margin: \"0 0.5rem 20px 0.5rem\", minHeight: \"450px\"}} >\n        <CardImg\n          top={true}\n          style={{ height: 200 }}\n          src={\n          `http://localhost:1337`+ res.image.url\n          }\n        />\n        <CardBody>\n        <CardTitle style={{ fontWeight: 'bold', fontSize: '20px', fontFamily: 'georgia'}}>{res.name}</CardTitle>\n          <CardText>{res.description}</CardText>\n        </CardBody>\n\n        <div className=\"card-footer\">\n        <Button color=\"info\"  onClick={()=> setRestaurantID(res.id)} href=\"/menu\" >   \n                View Specials\n              </Button>\n        </div>\n        \n      </Card>\n     \n    </Col>\n  ))\n  \n  return(\n\n    <Container>\n\n    <Row xs='3' style={{marginTop: \"1rem\"}}>\n    {renderDishes(restaurantID)}\n    </Row>\n\n    <Link href=\"/menu\">Menu</Link>\n\n    </Container>\n \n  )\n} else {\n  return <h1> No Restaurants Found</h1>\n}\n}\n   export default Menu;\n\n/*\nimport {gql,useQuery} from '@apollo/client';\nimport Dishes from \"../components/dishes\";\nimport {useContext, useState} from 'react';\nimport Link from \"next/link\";\nimport Cart from \"../components/cart\";\nimport AppContext from \"../components/context\";\nimport {Row, Col} from \"reactstrap\";\n\n\n\n  function Menu() {\n\n    \nreturn (\n    <>\n    <h1>This is where the specials will be</h1>\n    <Row>\n    <Col>Specials</Col>\n \n    <Col>\n<Cart></Cart>\n</Col>\n</Row>\n    </>\n)\n}\n  \n\n\n\n  export default Menu;\n  */"]},"metadata":{},"sourceType":"module"}