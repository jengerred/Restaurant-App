{"ast":null,"code":"var _jsxFileName = \"/Users/jennifergerred/Documents/MIT/Week 28/restaurant/pages/menu.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { gql, useQuery } from '@apollo/client';\nimport Dishes from \"../components/dishes\";\nimport { useContext, useState } from 'react';\nimport Link from \"next/link\";\nimport Cart from \"../components/cart\";\nimport AppContext from \"../components/context\";\nimport { Row, Col } from \"reactstrap\";\n\nfunction Menu({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n    query($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n  const {\n    cart\n  } = useContext(AppContext);\n  const {\n    0: state,\n    1: setState\n  } = useState(cart);\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant;\n\n  if (restId > 0) {\n    const renderDishes = restaurantID => {\n      return __jsx(Dishes, {\n        restId: restaurantID,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 14\n        }\n      }, \" \");\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, \"This is where the specials will be\"), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 5\n      }\n    }, __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }\n    }, \"Specials\"), renderDishes(restaurantID), __jsx(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }\n    }, __jsx(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 1\n      }\n    }))));\n  }\n}\n\nexport default Menu;","map":{"version":3,"sources":["/Users/jennifergerred/Documents/MIT/Week 28/restaurant/pages/menu.js"],"names":["gql","useQuery","Dishes","useContext","useState","Link","Cart","AppContext","Row","Col","Menu","restId","restaurantID","setRestaurantID","addItem","GET_RESTAURANT_DISHES","cart","state","setState","loading","error","data","variables","id","restaurant","renderDishes"],"mappings":";;;AAAA,SAAQA,GAAR,EAAYC,QAAZ,QAA2B,gBAA3B;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAAQC,UAAR,EAAoBC,QAApB,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,SAAQC,GAAR,EAAaC,GAAb,QAAuB,YAAvB;;AAGE,SAASC,IAAT,CAAc;AAACC,EAAAA;AAAD,CAAd,EAAwB;AACtB,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCT,QAAQ,EAAhD;AACA,QAAM;AAACU,IAAAA;AAAD,MAAYX,UAAU,CAACI,UAAD,CAA5B;AACA,QAAMQ,qBAAqB,GAAGf,GAAI;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAhBI;AAkBF,QAAM;AAACgB,IAAAA;AAAD,MAAUb,UAAU,CAACI,UAAD,CAA1B;AACA,QAAM;AAAA,OAACU,KAAD;AAAA,OAAQC;AAAR,MAAoBd,QAAQ,CAACY,IAAD,CAAlC;AAGA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BpB,QAAQ,CAACc,qBAAD,EAAwB;AAC/DO,IAAAA,SAAS,EAAE;AAAEC,MAAAA,EAAE,EAAEZ;AAAN;AADoD,GAAxB,CAAzC;AAIA,MAAIQ,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,MAAIC,KAAJ,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACX,MAAI,CAACC,IAAL,EAAW,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAP;AAEX,MAAIG,UAAU,GAAGH,IAAI,CAACG,UAAtB;;AAEA,MAAIb,MAAM,GAAG,CAAb,EAAe;AAEf,UAAMc,YAAY,GAAIb,YAAD,IAAkB;AACrC,aAAS,MAAC,MAAD;AAAQ,QAAA,MAAM,EAAEA,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAT;AACD,KAFD;;AAIF,WACI,4BACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CADA,EAEA,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,EAECa,YAAY,CAACb,YAAD,CAFb,EAGA,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADI,CAHA,CAFA,CADJ;AAYC;AACE;;AAID,eAAeF,IAAf","sourcesContent":["import {gql,useQuery} from '@apollo/client';\nimport Dishes from \"../components/dishes\";\nimport {useContext, useState} from 'react';\nimport Link from \"next/link\";\nimport Cart from \"../components/cart\";\nimport AppContext from \"../components/context\";\nimport {Row, Col} from \"reactstrap\";\n\n\n  function Menu({restId}) {\n    const [restaurantID, setRestaurantID] = useState()\n    const {addItem} = useContext(AppContext)\n    const GET_RESTAURANT_DISHES = gql`\n    query($id: ID!) {\n      restaurant(id: $id) {\n        id\n        name\n        dishes {\n          id\n          name\n          description\n          price\n          image {\n            url\n          }\n        }\n      }\n    }\n  `;\n\n  const {cart } = useContext(AppContext);\n  const [state, setState] = useState(cart)\n\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n  if (restId > 0){\n\n  const renderDishes = (restaurantID) => {\n    return ( <Dishes restId={restaurantID}> </Dishes>)\n  };\n\nreturn (\n    <>\n    <h1>This is where the specials will be</h1>\n    <Row>\n    <Col>Specials</Col>\n    {renderDishes(restaurantID)}\n    <Col>\n<Cart></Cart>\n</Col>\n</Row>\n    </>\n)\n}\n  }\n\n\n\n  export default Menu;"]},"metadata":{},"sourceType":"module"}