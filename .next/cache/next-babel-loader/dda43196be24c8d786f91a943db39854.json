{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query($id: ID!) {\\n    restaurant(id: $id) {\\n      id\\n      name\\n      dishes {\\n        id\\n        name\\n        description\\n        price\\n        image {\\n          url\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport Cart from \"../components/cart\";\nimport AppContext from \"./context\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes(_ref) {\n  var restId = _ref.restId;\n\n  var _useState = useState(),\n      restaurantID = _useState[0],\n      setRestaurantID = _useState[1];\n\n  var _useContext = useContext(AppContext),\n      addItem = _useContext.addItem;\n\n  var GET_RESTAURANT_DISHES = gql(_templateObject());\n  var router = useRouter();\n\n  var _useQuery = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  }),\n      loading = _useQuery.loading,\n      error = _useQuery.error,\n      data = _useQuery.data;\n\n  if (loading) return __jsx(\"p\", null, \"Loading...\");\n  if (error) return __jsx(\"p\", null, \"ERROR here\");\n  if (!data) return __jsx(\"p\", null, \"Not found\");\n  var restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        marginTop: \"20px\",\n        marginRight: \"10px\",\n        fontFamily: 'georgia'\n      }\n    }, restaurant.name), __jsx(\"h1\", {\n      style: {\n        marginTop: \"20px\",\n        fontFamily: \"times-italic\"\n      }\n    }, \" ~ Specials\"), __jsx(Row, null, restaurant.dishes.map(function (res) {\n      var _jsx;\n\n      return __jsx(Col, {\n        xs: \"6\",\n        sm: \"4\",\n        style: {\n          padding: 0\n        },\n        key: res.id\n      }, __jsx(Card, {\n        style: {\n          margin: \"0 10px 30px\",\n          width: \"300px\",\n          minHeight: \"480px\"\n        }\n      }, __jsx(CardImg, {\n        top: true,\n        style: {\n          height: 200\n        },\n        src: \"http://localhost:1337\".concat(res.image.url)\n      }), __jsx(CardBody, null, __jsx(CardTitle, {\n        style: {\n          fontWeight: 'bold',\n          fontSize: '20px'\n        }\n      }, res.name), __jsx(CardText, null, res.description), __jsx(CardText, null, \"$\", res.price)), __jsx(\"div\", {\n        className: \"card-footer\"\n      }, __jsx(Button, (_jsx = {\n        color: \"info\",\n        outline: true\n      }, _defineProperty(_jsx, \"color\", \"primary\"), _defineProperty(_jsx, \"onClick\", function onClick() {\n        return addItem(res);\n      }), _jsx), \"+ Add To Cart\"))));\n    }), __jsx(Col, null, __jsx(Cart, null, \" \"))));\n  } else {\n    return __jsx(React.Fragment, null, \" \", __jsx(\"h1\", null, \" Click \"), \" \", __jsx(\"h1\", {\n      className: \"text-info\",\n      style: {\n        marginRight: \"10px\",\n        marginLeft: \"10px\"\n      }\n    }, \"View Specials\"), __jsx(\"h1\", null, \"to see the dishes\"));\n  }\n}\n\nexport default Dishes;\n/*\n\nimport {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n\n\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n  if (restId > 0){\n\n    return (\n      <>\n       <h1>{restaurant.name}</h1>\n        <Row>\n          {restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" key={res.id}>\n              <Card style={{ margin: \"0 10px\", width: \"300px\"}}>\n                <CardImg\n                   top={true}\n                   style={{ height: 200 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle style={{ fontWeight: 'bold' }}>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                  <CardText>${res.price}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    color=\"primary\"\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))}\n       \n        </>\n        )}\n        else{\n          return <> <h1> Click the</h1> <h1 className=\"text-info\" style={{marginRight: \"10px\", marginLeft: \"10px\"}}>restaurant</h1>\n         <h1>to see the dishes</h1></>\n        }\n    }\n    export default Dishes;\n\n    */","map":null,"metadata":{},"sourceType":"module"}