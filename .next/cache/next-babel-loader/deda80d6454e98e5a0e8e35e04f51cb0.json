{"ast":null,"code":"var _jsxFileName = \"/Users/jennifergerred/Documents/MIT/Week 28/restaurant/components/dishes.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRouter } from \"next/router\";\nimport { gql, useQuery } from '@apollo/client';\nimport { useState, useContext } from 'react';\nimport Cart from \"./cart\";\nimport AppContext from \"./context\";\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport { Button, Card, CardBody, CardImg, CardText, CardTitle, Row, Col } from \"reactstrap\";\n\nfunction Dishes({\n  restId\n}) {\n  const {\n    0: restaurantID,\n    1: setRestaurantID\n  } = useState();\n  const {\n    addItem\n  } = useContext(AppContext);\n  const GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n  const router = useRouter();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: {\n      id: restId\n    }\n  });\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }\n  }, \"Loading...\");\n  if (error) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, \"ERROR here\");\n  if (!data) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"Not found\");\n  let restaurant = data.restaurant;\n\n  if (restId > 0) {\n    return __jsx(React.Fragment, null, __jsx(\"h1\", {\n      style: {\n        marginTop: \"20px\",\n        marginRight: \"10px\",\n        fontFamily: 'georgia'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, restaurant.name), __jsx(\"h1\", {\n      style: {\n        marginTop: \"20px\",\n        fontFamily: \"times-italic\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 104\n      }\n    }, \" ~ Specials\"), __jsx(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, restaurant.dishes.map(res => __jsx(Col, {\n      xs: \"6\",\n      sm: \"4\",\n      style: {\n        marginTop: \"2rem\"\n      },\n      key: res.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      className: \"cards\",\n      style: {\n        maxWidth: \"300px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }, __jsx(CardImg, {\n      top: true,\n      style: {\n        height: 200\n      },\n      src: `http://localhost:1337${res.image.url}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }), __jsx(CardBody, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, __jsx(CardTitle, {\n      style: {\n        fontWeight: 'bold',\n        fontSize: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, res.name), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 19\n      }\n    }, res.description), __jsx(CardText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 18\n      }\n    }, \"$\", res.price)), __jsx(\"div\", {\n      className: \"card-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }\n    }, __jsx(AnchorLink, {\n      href: \"#cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, __jsx(Button, {\n      color: \"info\",\n      outline: true,\n      onClick: () => addItem(res),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 42\n      }\n    }, \"+ Add To Cart\")))))), __jsx(Col, {\n      id: \"cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }\n    }, __jsx(Cart, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }\n    }, \" \"))));\n  } else {\n    return __jsx(React.Fragment, null, \" \", __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, \" Click \"), \" \", __jsx(\"h1\", {\n      className: \"text-info\",\n      style: {\n        marginRight: \"10px\",\n        marginLeft: \"10px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 38\n      }\n    }, \"View Specials\"), __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }\n    }, \"to see the dishes\"));\n  }\n}\n\nexport default Dishes;\n/*\n\nimport {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n\n\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n  if (restId > 0){\n\n    return (\n      <>\n       <h1>{restaurant.name}</h1>\n        <Row>\n          {restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" key={res.id}>\n              <Card style={{ margin: \"0 10px\", width: \"300px\"}}>\n                <CardImg\n                   top={true}\n                   style={{ height: 200 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle style={{ fontWeight: 'bold' }}>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                  <CardText>${res.price}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    color=\"primary\"\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))}\n       \n        </>\n        )}\n        else{\n          return <> <h1> Click the</h1> <h1 className=\"text-info\" style={{marginRight: \"10px\", marginLeft: \"10px\"}}>restaurant</h1>\n         <h1>to see the dishes</h1></>\n        }\n    }\n    export default Dishes;\n\n    */","map":{"version":3,"sources":["/Users/jennifergerred/Documents/MIT/Week 28/restaurant/components/dishes.js"],"names":["useRouter","gql","useQuery","useState","useContext","Cart","AppContext","AnchorLink","Button","Card","CardBody","CardImg","CardText","CardTitle","Row","Col","Dishes","restId","restaurantID","setRestaurantID","addItem","GET_RESTAURANT_DISHES","router","loading","error","data","variables","id","restaurant","marginTop","marginRight","fontFamily","name","dishes","map","res","maxWidth","height","image","url","fontWeight","fontSize","description","price","marginLeft"],"mappings":"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","sourcesContent":["import {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport Cart from \"./cart\"\nimport AppContext from \"./context\"\nimport AnchorLink from \"react-anchor-link-smooth-scroll\";\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n  if (restId > 0){\n\n    return (\n      <>\n   \n      <h1 style={{marginTop: \"20px\",marginRight: \"10px\", fontFamily: 'georgia'}}>{restaurant.name}</h1><h1 style={{marginTop: \"20px\", fontFamily: \"times-italic\"}}> ~ Specials</h1>\n        <Row>\n          {restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" style={{ marginTop: \"2rem\"}} key={res.id}>\n              <Card className=\"cards\" style={{maxWidth: \"300px\"}} >\n                <CardImg\n                  top={true}\n                  style={{ height: 200 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle style={{ fontWeight: 'bold', fontSize: '20px' }}>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                 <CardText>${res.price}</CardText>\n                </CardBody>\n                <div  className=\"card-footer\">\n                <AnchorLink href='#cart'><Button color=\"info\"\n                    outline\n                   \n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  </AnchorLink>\n                </div>\n              </Card>\n              \n            </Col>\n\n             \n          \n          ))}\n             \n          <Col id=\"cart\">\n             <Cart> </Cart>\n             </Col>\n            </Row>\n           \n        </>\n        )}\n        else{\n          return <> <h1> Click </h1> <h1 className=\"text-info\" style={{marginRight: \"10px\", marginLeft: \"10px\"}}>View Specials</h1>\n          <h1>to see the dishes</h1></>\n        }\n    }\n    export default Dishes\n\n\n\n\n\n/*\n\nimport {useRouter} from \"next/router\"\nimport {gql,useQuery} from '@apollo/client';\nimport {useState, useContext} from 'react'\nimport AppContext from \"./context\"\nimport {\n  Button,\n  Card,\n  CardBody,\n  CardImg,\n  CardText,\n  CardTitle,\n  Row,\n  Col} from \"reactstrap\";\n\n\nfunction Dishes({restId}){\n  const [restaurantID, setRestaurantID] = useState()\n  const {addItem} = useContext(AppContext)\n\nconst GET_RESTAURANT_DISHES = gql`\n  query($id: ID!) {\n    restaurant(id: $id) {\n      id\n      name\n      dishes {\n        id\n        name\n        description\n        price\n        image {\n          url\n        }\n      }\n    }\n  }\n`;\n\n  const router = useRouter();\n\n  const { loading, error, data } = useQuery(GET_RESTAURANT_DISHES, {\n    variables: { id: restId},\n  });\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>ERROR here</p>;\n  if (!data) return <p>Not found</p>;\n\n  let restaurant = data.restaurant;\n\n  if (restId > 0){\n\n    return (\n      <>\n       <h1>{restaurant.name}</h1>\n        <Row>\n          {restaurant.dishes.map((res) => (\n            <Col xs=\"6\" sm=\"4\" key={res.id}>\n              <Card style={{ margin: \"0 10px\", width: \"300px\"}}>\n                <CardImg\n                   top={true}\n                   style={{ height: 200 }}\n                  src={`http://localhost:1337${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle style={{ fontWeight: 'bold' }}>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                  <CardText>${res.price}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Button color=\"info\"\n                    outline\n                    color=\"primary\"\n                    onClick = {()=> addItem(res)}\n                  >\n                    + Add To Cart\n                  </Button>\n                  \n                </div>\n              </Card>\n            </Col>\n          ))}\n       \n        </>\n        )}\n        else{\n          return <> <h1> Click the</h1> <h1 className=\"text-info\" style={{marginRight: \"10px\", marginLeft: \"10px\"}}>restaurant</h1>\n         <h1>to see the dishes</h1></>\n        }\n    }\n    export default Dishes;\n\n    */"]},"metadata":{},"sourceType":"module"}